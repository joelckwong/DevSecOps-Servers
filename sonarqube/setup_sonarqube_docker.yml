---
- name: Setup Jenkins with Docker on CentOS/RHEL
  hosts: all
  become: true
  vars:
    docker_repo_url: https://download.docker.com/linux/centos/docker-ce.repo
    git_repo: https://github.com/joelckwong/DevSecOps-Servers.git
    sysctl_conf: "/etc/sysctl.conf"

  tasks:
    - name: Ensure umask is set to 022
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: "umask 022"
        state: present

    - name: Stop and disable fapolicyd
      ansible.builtin.systemd:
        name: fapolicyd
        state: stopped
        enabled: false

    - name: Add Docker CE repository
      ansible.builtin.command:
        cmd: yum-config-manager --add-repo {{ docker_repo_url }}
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Enable container-tools module
      ansible.builtin.command:
        cmd: dnf -y module enable container-tools 

    - name: Install Docker CE
      ansible.builtin.command:
        cmd: dnf -y install docker-ce --allowerasing

    - name: Enable and start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Set vm.max_map_count
      ansible.builtin.sysctl:
        name: vm.max_map_count
        value: '262144'
        state: present
        reload: yes

    - name: Clone Git repository
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        dest: ~/DevSecOps-Servers
        version: master

    - name: Create SonarQube data directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /data/sonarqube_data
        - /data/sonarqube_logs
        - /data/postgresql_data

    - name: Set ownership for sonarqube_data and logs
      ansible.builtin.file:
        path: "{{ item.path }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      loop:
        - { path: /data/sonarqube_data, owner: '1000', group: '1000' }
        - { path: /data/sonarqube_logs, owner: '1000', group: '1000' }
        - { path: /data/postgresql_data, owner: '999', group: '999' }

    - name: Run docker-compose in Sonarqube directory
      ansible.builtin.shell: docker compose up -d
      args:
        chdir: ~/DevSecOps-Servers/sonarqube

    - name: Open port 443 permanently
      ansible.builtin.command: firewall-cmd --permanent --add-port=443/tcp

    - name: Reload firewalld
      ansible.builtin.command: firewall-cmd --reload

    - name: List open ports
      ansible.builtin.command: firewall-cmd --list-ports
      register: firewall_ports

    - name: Show open ports
      ansible.builtin.debug:
        var: firewall_ports.stdout

    - name: Pause for 3 minutes to app start
      ansible.builtin.pause:
        minutes: 3

    - name: Reboot system
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible after SonarQube setup."
        pre_reboot_delay: 5
        reboot_timeout: 600
